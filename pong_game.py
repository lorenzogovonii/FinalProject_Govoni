# -*- coding: utf-8 -*-
"""pong_game

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WLmV9YSbHE8vkcDSLiJrKdcq5caljzcg
"""

import pygame
import sys

pygame.init()

WIDTH, HEIGHT = 800, 600
PADDLE_WIDTH, PADDLE_HEIGHT = 10, 100
BALL_SIZE = 15
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
FPS = 60
WINNING_SCORE = 5

screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pong Game")

class Paddle:
    def __init__(self, x):
        self.rect = pygame.Rect(x, HEIGHT//2 - PADDLE_HEIGHT//2, PADDLE_WIDTH, PADDLE_HEIGHT)
        self.speed = 7

    def move(self, up=True):
        if up:
            self.rect.y -= self.speed
        else:
            self.rect.y += self.speed

        self.rect.y = max(0, min(self.rect.y, HEIGHT - PADDLE_HEIGHT))

class Ball:
    def __init__(self):
        self.rect = pygame.Rect(WIDTH//2 - BALL_SIZE//2, HEIGHT//2 - BALL_SIZE//2, BALL_SIZE, BALL_SIZE)
        self.speed_x = 5
        self.speed_y = 5

    def move(self):
        self.rect.x += self.speed_x
        self.rect.y += self.speed_y

        if self.rect.top <= 0 or self.rect.bottom >= HEIGHT:
            self.speed_y *= -1

    def reset(self):
        self.rect.center = (WIDTH//2, HEIGHT//2)
        self.speed_x *= -1
        self.speed_y *= -1


left_paddle = Paddle(30)
right_paddle = Paddle(WIDTH - 40)
ball = Ball()

score_font = pygame.font.SysFont("Arial", 30)
left_score = 0
right_score = 0


clock = pygame.time.Clock()
running = True

while running:
    clock.tick(FPS)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    keys = pygame.key.get_pressed()
    if keys[pygame.K_w]:
        left_paddle.move(up=True)
    if keys[pygame.K_s]:
        left_paddle.move(up=False)
    if keys[pygame.K_UP]:
        right_paddle.move(up=True)
    if keys[pygame.K_DOWN]:
        right_paddle.move(up=False)

    ball.move()


    if ball.rect.colliderect(left_paddle.rect) or ball.rect.colliderect(right_paddle.rect):
        ball.speed_x *= -1

    if ball.rect.left <= 0:
        right_score += 1
        ball.reset()
    if ball.rect.right >= WIDTH:
        left_score += 1
        ball.reset()


    if left_score == WINNING_SCORE or right_score == WINNING_SCORE:
        running = False

    screen.fill(BLACK)
    pygame.draw.rect(screen, WHITE, left_paddle.rect)
    pygame.draw.rect(screen, WHITE, right_paddle.rect)
    pygame.draw.ellipse(screen, WHITE, ball.rect)
    pygame.draw.aaline(screen, WHITE, (WIDTH//2, 0), (WIDTH//2, HEIGHT))

    left_text = score_font.render(str(left_score), True, WHITE)
    right_text = score_font.render(str(right_score), True, WHITE)
    screen.blit(left_text, (WIDTH//4, 20))
    screen.blit(right_text, (WIDTH * 3//4, 20))

    pygame.display.flip()

pygame.quit()
sys.exit()